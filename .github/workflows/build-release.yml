name: Build and Release

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release-linux-and-windows:
    runs-on: ubuntu-latest
    container: rust:1.76

    steps:
    - uses: actions/checkout@v3

    - name: Install necessary libraries
      run: |
        # Add foreign architectures
        dpkg --add-architecture i386
        dpkg --add-architecture arm64
        dpkg --add-architecture armhf
        dpkg --add-architecture riscv64

        # Update the package lists
        apt-get update
        apt-get -y install mingw-w64 libclang-dev libasound2-dev libasound2-dev:amd64 libasound2-dev:i386 libasound2-dev:arm64 libasound2-dev:armhf libasound2-dev:riscv64

    - name: Build production release for linux and windows
      run: |
        echo "Adding supported targets to the rustup toolchain"
        # x86 64bit architectures
        echo "Adding target x86_64-unknown-linux-gnu"
        rustup target add x86_64-unknown-linux-gnu
        echo "Adding target x86_64-pc-windows-gnu"
        rustup target add x86_64-pc-windows-gnu
        
        # x86 32bit architectures
        echo "Adding target i686-unknown-linux-gnu"
        rustup target add i686-unknown-linux-gnu
        echo "Adding target i686-pc-windows-gnu"
        rustup target add i686-pc-windows-gnu
        
        # ARM 64bit architectures
        echo "Adding target aarch64-unknown-linux-gnu"
        rustup target add aarch64-unknown-linux-gnu

        # ARM 32bit architectures
        echo "Adding target armv7-unknown-linux-gnueabihf"
        rustup target add armv7-unknown-linux-gnueabihf

        # RISC-V 64bit architectures
        echo "Adding target riscv64gc-unknown-linux-gnu"
        rustup target add riscv64gc-unknown-linux-gnu

        # Build the release
        echo "Building the release for x86_64-unknown-linux-gnu"
        cargo build --release --target x86_64-unknown-linux-gnu
        echo "Building the release for x86_64-pc-windows-gnu"
        cargo build --release --target x86_64-pc-windows-gnu
        echo "Building the release for i686-unknown-linux-gnu"
        cargo build --release --target i686-unknown-linux-gnu
        echo "Building the release for i686-pc-windows-gnu"
        cargo build --release --target i686-pc-windows-gnu
        echo "Building the release for aarch64-unknown-linux-gnu"
        cargo build --release --target aarch64-unknown-linux-gnu
        echo "Building the release for armv7-unknown-linux-gnueabihf"
        cargo build --release --target armv7-unknown-linux-gnueabihf
        echo "Building the release for riscv64gc-unknown-linux-gnu"
        cargo build --release --target riscv64gc-unknown-linux-gnu

    - name: Run tests in release mode
      run: cargo test -r
    
    # upload artifacts
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release
        path: |
          target/x86_64-unknown-linux-gnu/release/polish-cow
          target/x86_64-pc-windows-gnu/release/polish-cow.exe
          target/i686-unknown-linux-gnu/release/polish-cow
          target/i686-pc-windows-gnu/release/polish-cow.exe
          target/aarch64-unknown-linux-gnu/release/polish-cow
          target/armv7-unknown-linux-gnueabihf/release/polish-cow
          target/riscv64gc-unknown-linux-gnu/release/polish-cow

  build-and-release-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install rustup
      run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

    - name: Build production release for macOS
      run: |
        echo "Adding supported targets to the rustup toolchain"
        # x86 64bit architectures
        echo "Adding target x86_64-apple-darwin"
        rustup target add x86_64-apple-darwin
        
        # ARM 64bit architectures
        echo "Adding target aarch64-apple-darwin"
        rustup target add aarch64-apple-darwin

        # Build the release
        echo "Building the release for x86_64-apple-darwin"
        cargo build --release --target x86_64-apple-darwin
        echo "Building the release for aarch64-apple-darwin"
        cargo build --release --target aarch64-apple-darwin

    # upload artifacts
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release
        path: |
          target/x86_64-apple-darwin/release/polish-cow
          target/aarch64-apple-darwin/release/polish-cow